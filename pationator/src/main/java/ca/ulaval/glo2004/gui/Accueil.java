package ca.ulaval.glo2004.gui;

import ca.ulaval.glo2004.gui.dto.SauvegardeDTO;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.border.LineBorder;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

public class Accueil extends JFrame {
    private JPanel panel1;
    private JButton newButton;
    private JButton quitButton;
    private JButton openButton;

    public Accueil(MainWindow mainWindow) throws Exception {
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setContentPane(panel1);
        Image icone = ImageIO.read(getClass().getResource("/pationator.png"));
        this.setIconImage(icone);
        this.setTitle("Pationator");
        this.pack();
        this.setLocationRelativeTo(null);

        newButton.addActionListener(e -> {
            mainWindow.setVisible(true);
            dispose();
        });

        Color blue = new Color(120, 219, 235);
        newButton.setBorder(new LineBorder(blue, 1, false));
        openButton.setBorder(new LineBorder(blue, 1, false));
        quitButton.setBorder(new LineBorder(blue, 1, false));

        quitButton.addActionListener(e -> System.exit(0));

        openButton.addActionListener(e -> {
            try {
                setCursor(new Cursor(Cursor.WAIT_CURSOR));
                SauvegardeDTO sauvegardeDTO = mainWindow.getController().chargerProjet();
                mainWindow.chargerSauvegardeDTO(sauvegardeDTO);
                mainWindow.miseAJourListeMateriel(mainWindow.getController().getListeMateriel());
                mainWindow.setVisible(true);
                setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                dispose();
            } catch (Exception ignored) {
            }
            setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(4, 1, new Insets(200, 0, 0, 0), -1, 50));
        panel1.setBackground(new Color(-14735571));
        panel1.setMaximumSize(new Dimension(800, 800));
        panel1.setMinimumSize(new Dimension(800, 800));
        panel1.setPreferredSize(new Dimension(800, 800));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel2.setOpaque(false);
        panel1.add(panel2, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, 20));
        panel3.setOpaque(false);
        panel3.setPreferredSize(new Dimension(250, 240));
        panel2.add(panel3);
        quitButton = new JButton();
        quitButton.setBackground(new Color(-8856597));
        quitButton.setBorderPainted(true);
        quitButton.setContentAreaFilled(false);
        Font quitButtonFont = this.$$$getFont$$$("Segoe UI", -1, 24, quitButton.getFont());
        if (quitButtonFont != null) quitButton.setFont(quitButtonFont);
        quitButton.setForeground(new Color(-8856597));
        quitButton.setOpaque(false);
        quitButton.setText("Quitter");
        quitButton.setVisible(true);
        panel3.add(quitButton, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(140, 60), null, 0, false));
        openButton = new JButton();
        openButton.setBackground(new Color(-8856597));
        openButton.setBorderPainted(true);
        openButton.setContentAreaFilled(false);
        Font openButtonFont = this.$$$getFont$$$("Segoe UI", -1, 24, openButton.getFont());
        if (openButtonFont != null) openButton.setFont(openButtonFont);
        openButton.setForeground(new Color(-8856597));
        openButton.setOpaque(false);
        openButton.setText("Ouvrir un projet");
        openButton.setVisible(true);
        panel3.add(openButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(140, 60), null, 0, false));
        newButton = new JButton();
        newButton.setBackground(new Color(-8856597));
        newButton.setBorderPainted(true);
        newButton.setContentAreaFilled(false);
        Font newButtonFont = this.$$$getFont$$$("Segoe UI", -1, 24, newButton.getFont());
        if (newButtonFont != null) newButton.setFont(newButtonFont);
        newButton.setForeground(new Color(-8856597));
        newButton.setOpaque(false);
        newButton.setText("Nouveau projet");
        newButton.setVisible(true);
        panel3.add(newButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(140, 60), null, 0, false));
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new BorderLayout(0, 0));
        panel4.setBackground(new Color(-11051674));
        panel4.setOpaque(true);
        panel1.add(panel4, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setBackground(new Color(-11051674));
        Font label1Font = this.$$$getFont$$$("Segoe UI", Font.BOLD, 96, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setForeground(new Color(-8856597));
        label1.setHorizontalAlignment(0);
        label1.setOpaque(false);
        label1.setText("Pationator");
        panel4.add(label1, BorderLayout.CENTER);
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new BorderLayout(0, 0));
        panel5.setBackground(new Color(-8856597));
        panel5.setPreferredSize(new Dimension(24, 10));
        panel4.add(panel5, BorderLayout.NORTH);
        final JPanel panel6 = new JPanel();
        panel6.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel6.setPreferredSize(new Dimension(24, 5));
        panel5.add(panel6, BorderLayout.SOUTH);
        final JPanel panel7 = new JPanel();
        panel7.setLayout(new BorderLayout(0, 0));
        panel7.setBackground(new Color(-8856597));
        panel7.setPreferredSize(new Dimension(24, 10));
        panel4.add(panel7, BorderLayout.SOUTH);
        final JPanel panel8 = new JPanel();
        panel8.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel8.setPreferredSize(new Dimension(24, 5));
        panel7.add(panel8, BorderLayout.NORTH);
        final JPanel panel9 = new JPanel();
        panel9.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        panel9.setOpaque(false);
        panel1.add(panel9, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(-1, 20), null, 0, false));
        final JLabel label2 = new JLabel();
        Font label2Font = this.$$$getFont$$$(null, -1, 16, label2.getFont());
        if (label2Font != null) label2.setFont(label2Font);
        label2.setForeground(new Color(-10263709));
        label2.setHorizontalAlignment(0);
        label2.setText("Version 2.0.1");
        panel9.add(label2);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
